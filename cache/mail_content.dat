
<h3>发现最新漏洞情报<font color="red">10</font>条：</h3>
<ul>
    <li><font color="red">10</font>条由 [<a href="https://www.tenable.com/">Tenable (Nessus)</a>] 提供</li>
</ul>
<h3>详细漏洞清单如下：</h3>
<br/>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2023-34092</font><br/>[<b>披露时间</b>] 2023-06-01 17:15:00<br/>[<b>漏洞描述</b>] Vite provides frontend tooling. Prior to versions 2.9.16, 3.2.7, 4.0.5, 4.1.5, 4.2.3, and 4.3.9, Vite Server Options (`server.fs.deny`) can be bypassed using double forward-slash (//) allows any unauthenticated user to read file from the Vite root-path of the application including the default `fs.deny` settings (`['.env', '.env.*', '*.{crt,pem}']`). Only users explicitly exposing the Vite dev server to the network (using `--host` or `server.host` config option) are affected, and only files in the immediate Vite project root folder could be exposed. This issue is fixed in vite@4.3.9, vite@4.2.3, vite@4.1.5, vite@4.0.5, vite@3.2.7, and vite@2.9.16.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2023-34092'>https://www.tenable.com/cve/CVE-2023-34092</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2023-34091</font><br/>[<b>披露时间</b>] 2023-06-01 17:15:00<br/>[<b>漏洞描述</b>] Kyverno is a policy engine designed for Kubernetes. In versions of Kyverno prior to 1.10.0, resources which have the `deletionTimestamp` field defined can bypass validate, generate, or mutate-existing policies, even in cases where the `validationFailureAction` field is set to `Enforce`. This situation occurs as resources pending deletion were being consciously exempted by Kyverno, as a way to reduce processing load as policies are typically not applied to objects which are being deleted. However, this could potentially result in allowing a malicious user to leverage the Kubernetes finalizers feature by setting a finalizer which causes the Kubernetes API server to set the `deletionTimestamp` and then not completing the delete operation as a way to explicitly to bypass a Kyverno policy. Note that this is not applicable to Kubernetes Pods but, as an example, a Kubernetes Service resource can be manipulated using an indefinite finalizer to bypass policies. This is resolved in Kyverno 1.10.0. There is no known workaround.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2023-34091'>https://www.tenable.com/cve/CVE-2023-34091</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2023-33960</font><br/>[<b>披露时间</b>] 2023-06-01 17:15:00<br/>[<b>漏洞描述</b>] OpenProject is web-based project management software. For any OpenProject installation, a `robots.txt` file is generated through the server to denote which routes shall or shall not be accessed by crawlers. These routes contain project identifiers of all public projects in the instance. Prior to version 12.5.6, even if the entire instance is marked as `Login required` and prevents all truly anonymous access, the `/robots.txt` route remains publicly available.Version 12.5.6 has a fix for this issue. Alternatively, users can download a patchfile to apply the patch to any OpenProject version greater than 10.0 As a workaround, one may mark any public project as non-public and give anyone in need of access to the project a membership.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2023-33960'>https://www.tenable.com/cve/CVE-2023-33960</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2023-32717</font><br/>[<b>披露时间</b>] 2023-06-01 17:15:00<br/>[<b>漏洞描述</b>] On Splunk Enterprise versions below 9.0.5, 8.2.11, and 8.1.14, and in Splunk Cloud Platform versions below 9.0.2303.100, an unauthorized user can access the {{/services/indexing/preview}} REST endpoint to overwrite search results if they know the search ID (SID) of an existing search job.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2023-32717'>https://www.tenable.com/cve/CVE-2023-32717</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2023-32716</font><br/>[<b>披露时间</b>] 2023-06-01 17:15:00<br/>[<b>漏洞描述</b>] In Splunk Enterprise versions below 9.0.5, 8.2.11, and 8.1.14, and Splunk Cloud Platform versions below 9.0.2303.100, an attacker can exploit a vulnerability in the {{dump}} SPL command to cause a denial of service by crashing the Splunk daemon.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2023-32716'>https://www.tenable.com/cve/CVE-2023-32716</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2023-32715</font><br/>[<b>披露时间</b>] 2023-06-01 17:15:00<br/>[<b>漏洞描述</b>] In the Splunk App for Lookup File Editing versions below 4.0.1, a user can insert potentially malicious JavaScript code into the app, which causes that code to run on the user’s machine. The app itself does not contain the potentially malicious JavaScript code. The vulnerability requires the attacker to phish the victim by tricking them into initiating a request within their browser, and requires additional user interaction to trigger. The attacker cannot exploit the vulnerability at will.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2023-32715'>https://www.tenable.com/cve/CVE-2023-32715</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2023-32714</font><br/>[<b>披露时间</b>] 2023-06-01 17:15:00<br/>[<b>漏洞描述</b>] In the Splunk App for Lookup File Editing versions below 4.0.1, a low-privileged user can, with a specially crafted web request, trigger a path traversal exploit that can then be used to read and write to restricted areas of the Splunk installation directory.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2023-32714'>https://www.tenable.com/cve/CVE-2023-32714</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2023-32713</font><br/>[<b>披露时间</b>] 2023-06-01 17:15:00<br/>[<b>漏洞描述</b>] In Splunk App for Stream versions below 8.1.1, a low-privileged user could use a vulnerability in the streamfwd process within the Splunk App for Stream to escalate their privileges on the machine that runs the Splunk Enterprise instance, up to and including the root user.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2023-32713'>https://www.tenable.com/cve/CVE-2023-32713</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2023-32712</font><br/>[<b>披露时间</b>] 2023-06-01 17:15:00<br/>[<b>漏洞描述</b>] In Splunk Enterprise versions below 9.0.5, 8.2.11, and 8.1.14, an attacker can use a specially crafted web URL in their browser to cause log file poisoning. The attack requires the attacker to have secure shell (SSH) access to the instance and use a terminal program that supports a certain feature set to execute the attack successfully.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2023-32712'>https://www.tenable.com/cve/CVE-2023-32712</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2023-32711</font><br/>[<b>披露时间</b>] 2023-06-01 17:15:00<br/>[<b>漏洞描述</b>] In Splunk Enterprise versions below 9.0.5, 8.2.11, and 8.1.14, a Splunk dashboard view lets a low-privileged user exploit a vulnerability in the Bootstrap web framework (CVE-2019-8331) and build a stored cross-site scripting (XSS) payload.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2023-32711'>https://www.tenable.com/cve/CVE-2023-32711</a>

<br/><br/>
++++++++++++++++++++++++++++++++++++++++++++++
<br/>
<font color="red">【漏洞情报收集与播报支持】</font> https://threat.yg-sec.com/
