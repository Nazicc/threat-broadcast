
<h3>发现最新漏洞情报<font color="red">7</font>条：</h3>
<ul>
    <li><font color="red">7</font>条由 [<a href="https://www.tenable.com/">Tenable (Nessus)</a>] 提供</li>
</ul>
<h3>详细漏洞清单如下：</h3>
<br/>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2022-44081</font><br/>[<b>披露时间</b>] 2022-10-31 19:15:00<br/>[<b>漏洞描述</b>] Lodepng v20220717 was discovered to contain a segmentation fault via the function pngdetail.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2022-44081'>https://www.tenable.com/cve/CVE-2022-44081</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2022-44079</font><br/>[<b>披露时间</b>] 2022-10-31 19:15:00<br/>[<b>漏洞描述</b>] pycdc commit 44a730f3a889503014fec94ae6e62d8401cb75e5 was discovered to contain a stack overflow via the component __sanitizer::StackDepotBase<__sanitizer::StackDepotNode.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2022-44079'>https://www.tenable.com/cve/CVE-2022-44079</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2022-43152</font><br/>[<b>披露时间</b>] 2022-10-31 19:15:00<br/>[<b>漏洞描述</b>] tsMuxer v2.6.16 was discovered to contain a heap overflow via the function BitStreamWriter::flushBits() at /tsMuxer/bitStream.h.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2022-43152'>https://www.tenable.com/cve/CVE-2022-43152</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2022-43151</font><br/>[<b>披露时间</b>] 2022-10-31 19:15:00<br/>[<b>漏洞描述</b>] timg v1.4.4 was discovered to contain a memory leak via the function timg::QueryBackgroundColor() at /timg/src/term-query.cc.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2022-43151'>https://www.tenable.com/cve/CVE-2022-43151</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2022-43148</font><br/>[<b>披露时间</b>] 2022-10-31 19:15:00<br/>[<b>漏洞描述</b>] rtf2html v0.2.0 was discovered to contain a heap overflow in the component /rtf2html/./rtf_tools.h.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2022-43148'>https://www.tenable.com/cve/CVE-2022-43148</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2022-39294</font><br/>[<b>披露时间</b>] 2022-10-31 19:15:00<br/>[<b>漏洞描述</b>] conduit-hyper integrates a conduit application with the hyper server. Prior to version 0.4.2, `conduit-hyper` did not check any limit on a request's length before calling [`hyper::body::to_bytes`](https://docs.rs/hyper/latest/hyper/body/fn.to_bytes.html). An attacker could send a malicious request with an abnormally large `Content-Length`, which could lead to a panic if memory allocation failed for that request. In version 0.4.2, `conduit-hyper` sets an internal limit of 128 MiB per request, otherwise returning status 400 ("Bad Request"). This crate is part of the implementation of Rust's [crates.io](https://crates.io/), but that service is not affected due to its existing cloud infrastructure, which already drops such malicious requests. Even with the new limit in place, `conduit-hyper` is not recommended for production use, nor to directly serve the public Internet.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2022-39294'>https://www.tenable.com/cve/CVE-2022-39294</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2022-2741</font><br/>[<b>披露时间</b>] 2022-10-31 18:15:00<br/>[<b>漏洞描述</b>] The denial-of-service can be triggered by transmitting a carefully crafted CAN frame on the same CAN network as the vulnerable node. The frame must have a CAN ID matching an installed filter in the vulnerable node (this can easily be guessed based on CAN traffic analyses). The frame must contain the opposite RTR bit as what the filter installed in the vulnerable node contains (if the filter matches RTR frames, the frame must be a data frame or vice versa).<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2022-2741'>https://www.tenable.com/cve/CVE-2022-2741</a>

<br/><br/>
++++++++++++++++++++++++++++++++++++++++++++++
<br/>
<font color="red">【漏洞情报收集与播报支持】</font> https://threat.yg-sec.com/
